# change your environment to the python environment
reticulate::use_condaenv("python.exe")


#Install keras and tensorflow in the R terminal using pip and install.packages()
library(keras)

model <- keras_model_sequential()
model %>%
   layer_dense(units, input_shape = num_features) %>%
   layer_dropout(rate = 0.5) %>%
   layer_dense(units = 1) 


# First visualization of the model
model

# Plot the model
library(deepviz)
library(magrittr)
#library(kerasR)

model %>% 
  plot_model()

model %>% compile(
  loss = 'MSE',
  optimizer = optimizer_adam(learning_rate= 0.001),  
  metrics = list('MAE', rsq_metric)
)

start_time <- Sys.time()

# Train the model
history <- model %>% fit(
  train_dataset$data_X, train_dataset$data_y,
  epochs = 100, batch_size = 28, verbose = 2, 
  validation_split = 0.2, 
  shuffle = FALSE
)

end_time <- Sys.time()
elapsed_time <- cbind(elapsed_time, end_time - start_time)
# plot(history)

# Evaluate the model on the test set
mse <- cbind(mse, 
             model %>% evaluate(test_dataset$data_X, test_dataset$data_y, verbose = 0)
)
#cat("Mse & MAE on Test Set:", mse)

predictions <- cbind(predictions, 
                     model %>%
  predict(test_dataset$data_X)
)

trainset_prediction <- cbind(trainset_prediction, model %>%
  predict(train_dataset$data_X)
)
